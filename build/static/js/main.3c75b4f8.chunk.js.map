{"version":3,"sources":["reducers/index.js","actions/index.js","components/Swiper.js","components/List.js","App.js","index.js"],"names":["rootReducer","combineReducers","fetchListReducer","state","action","type","tag","list","Swiper","prev","bind","next","changeButtons","pageSize","page","showButtons","animate","this","initState","window","onresize","resize","prevProps","children","length","props","className","ref","disabled","prevDisabled","onClick","xmlns","viewBox","width","height","fill","getArrowColor","d","nextDisabled","style","transform","map","item","index","key","setState","options","defaultShowButtons","setTimeout","initItems","swiperWidth","refs","swiper","clientWidth","left","i","currentPage","show","direct","React","Component","List","info","title","link","books","Math","ceil","items","renderBooks","onMouseEnter","onMouseLeave","href","j","book","push","id","author_link","author","src","cover","price","App","changeNums","pictureList","slice","num","onInput","e","dispatch","fetch","headers","then","response","json","getList","data","n","target","value","connect","picture","middleware","thunk","store","createStore","reducer","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3c75b4f8.chunk.js","sourcesContent":["import { combineReducers } from 'redux'\nimport {\n    GET_LIST\n} from '../actions'\n\nconst fetchListReducer = (state = { }, action) => {\n    switch (action.type) {\n        case GET_LIST:\n        return {\n            ...state,\n            [action.tag]: action.list\n        }\n        default:\n        return state\n    }\n}\n\nconst rootReducer = combineReducers({\n    fetchListReducer,\n})\n\nexport default rootReducer","export const GET_LIST = 'GET_LIST';\nexport const getList = (tag, list) => ({\n    type: GET_LIST,\n    tag,\n    list\n});\nexport const fetchList = tag => dispatch => {\n    return fetch(`/json/${tag}`, {headers: {'Content-Type': 'application/json; charset=utf-8'}})\n        .then(response => response.json())\n        .then(json => dispatch(getList(tag, json.data)))\n}","import React from 'react';\nimport './Swiper.scss';\nclass Swiper extends React.Component {\n    constructor() {\n        super();\n        this.prev = this.prev.bind(this);\n        this.next = this.next.bind(this);\n        this.changeButtons = this.changeButtons.bind(this);\n        this.state = {\n            pageSize: 1,\n            page: 1,\n            showButtons: true,\n            animate: false,\n        };\n    }\n    componentDidMount() {\n        this.initState();\n        window.onresize = this.resize.bind(this);\n    }\n    componentDidUpdate(prevProps) {\n        // 更新，渲染\n        if (prevProps.children.length !== this.props.children.length) {\n            this.initState();\n        }\n    }\n    componentWillUnmount() {\n        window.onresize = null;\n    }\n    render() {\n        return (\n            <div className={`widget-swiper ${this.state.showButtons ? 'show' : ''}`}\n                ref=\"swiper\">\n                <div className=\"swiper-prev\">\n                    <button className=\"btn-prev\" disabled={this.prevDisabled()} onClick={this.prev}>\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 6 11\" width=\"7\" height=\"14\"><path fill={this.getArrowColor('prev')} d=\"M4.894 10.986l1.1-.92-4.096-4.573L5.993.92 4.893 0 0 5.473l4.894 5.513z\"></path></svg>\n                    </button>\n                </div>\n                <div className=\"swiper-next\">\n                    <button className=\"btn-next\" disabled={this.nextDisabled()} onClick={this.next}>\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 6 11\" width=\"7\" height=\"14\" style={{transform: 'scaleX(-1)'}}><path fill={this.getArrowColor('next')} d=\"M4.894 10.986l1.1-.92-4.096-4.573L5.993.92 4.893 0 0 5.473l4.894 5.513z\"></path></svg>\n                    </button>\n                </div>\n                <div className=\"widget-swiper-inner\">\n                    {this.props.children.map((item, index) => (\n                        <div className={`widget-swiper-item ${this.state.animate ? 'animate' : ''}`} key={index} ref={`item_${index + 1}`}>\n                            {item}\n                        </div>\n                    ))}\n                </div>\n            </div>\n        );\n    }\n    /**\n     * 初始化状态\n     */\n    initState() {\n        this.setState({\n            pageSize: this.props.children.length,\n            page: 1,\n            showButtons: this.props.options.defaultShowButtons,\n            animate: false,\n        });\n        // 渲染子元素\n        setTimeout(() => {\n            this.initItems();\n        }, 0);\n    }\n    /**\n     * 初始化子元素\n     */\n    initItems() {\n        this.swiperWidth = this.refs.swiper.clientWidth;\n        let { pageSize } = this.state;\n        // 设置子元素的位置\n        this.refs['item_1'].style.left = 0;\n        if (pageSize > 1) {\n            for (let i = 2; i <= pageSize; i++) {\n                this.refs[`item_${i}`].style.left = `${this.swiperWidth}px`;\n            }\n        }\n        setTimeout(() => {\n            this.setState({\n                ...this.state,\n                // 渲染完子元素后再加上过渡效果\n                animate: true,\n            });\n        }, 100);\n    }\n    /**\n     * 上一组\n     */\n    prev() {\n        let currentPage = this.state.page,\n        page = currentPage - 1;\n        this.setState({\n            ...this.state,\n            page,\n        });\n        this.refs[`item_${page}`].style.left = 0;\n        this.refs[`item_${currentPage}`].style.left = this.swiperWidth + 'px';\n    }\n    /**\n     * 下一组\n     */\n    next() {\n        let currentPage = this.state.page,\n            page = currentPage + 1;\n        this.setState({\n            ...this.state,\n            page,\n        });\n        this.refs[`item_${page}`].style.left = 0;\n        this.refs[`item_${currentPage}`].style.left = -1 * this.swiperWidth + 'px';\n    }\n    /**\n     * 上一组按钮禁止点击\n     */\n    prevDisabled() {\n        return this.state.page > 1 ? '' : 'disabled';\n    }\n    /**\n     * 下一组按钮禁止点击\n     */\n    nextDisabled() {\n        return this.state.pageSize > this.state.page ? '' : 'disabled';\n    }\n    /**\n     * 按钮显示隐藏\n     */\n    changeButtons(show) {\n        if (this.state.showButtons !== show) {\n            this.setState({\n                ...this.state,\n                showButtons: show\n            });\n        }\n    }\n    /**\n     * 按钮显示隐藏的颜色\n     */\n    getArrowColor(direct) {\n        if ((direct === 'prev' && !this.prevDisabled()) ||\n        (direct === 'next' && !this.nextDisabled())) {\n            return '#825807';\n        } else {\n            return '#aaa';\n        }\n    }\n    /**\n     * 窗口大小改变时重新计算子元素位置\n     */\n    resize() {\n        this.initItems();\n    }\n}\nexport default Swiper;","import React from 'react';\nimport './List.scss';\nimport Swiper from './Swiper';\n// 一页展示书本的个数\nconst LIST_NUM = 3;\nclass List extends React.Component {\n    render() {\n        let {title, link, books} = this.props.info || {};\n        let swiperOptions = {\n            // 默认隐藏左右按钮\n            defaultShowButtons: false\n        };\n        if (this.props.info) {\n            let page = Math.ceil(books.length / LIST_NUM);\n            let items = this.renderBooks(books, page);\n            return (\n                <div className=\"widget-list\"\n                onMouseEnter={() => this.refs.swiper.changeButtons(true)}\n                onMouseLeave={() => this.refs.swiper.changeButtons(false)}>\n                    <div className=\"widget-list-head\">\n                        <h2 className=\"widget-list-title\">{title}</h2>\n                        <div className=\"widget-list-link\">\n                            <a href={link}>更多{title}</a>\n                        </div>\n                    </div>\n                    <div className=\"widget-list-body\">\n                        <Swiper options={swiperOptions} ref=\"swiper\">\n                            {\n                            items.map((item, index) => (\n                                <div className=\"book-wrap\" key={index}>{item}</div>\n                            ))}\n                        </Swiper>\n                    </div>\n                </div>\n            );\n        } else {\n            return (<div></div>);\n        }\n    }\n    /**\n     * 渲染书本\n     * @param {array} books \n     * @param {number} page \n     */\n    renderBooks(books, page) {\n        let items = [];\n        // 每3张为一页\n        for (let i = 0; i < page; i++) {\n            items[i] = [];\n            for (let j = 0; j < LIST_NUM; j++) {\n                let book = books[i*LIST_NUM + j];\n                if (!book) {\n                    break;\n                }\n                items[i].push(\n                <div className=\"book-container\" key={book.id}>\n                    <div className=\"book-container-main\">\n                        <div className=\"description\">\n                            <h4 className=\"title\"><a title={book.title} href={book.link} >{book.title}</a></h4>\n                            <div className=\"author\"><a href={book.author_link} >{book.author[0]} {book.author.length > 1 ? '等' : ''}</a></div>\n                        </div>\n                        <div className=\"cover\">\n                            <a href={book.link}>\n                                <img src={book.cover}></img>\n                            </a>\n                        </div>\n                    </div>\n                    <div className=\"price\">{book.price}元</div>\n                </div>);\n            }\n        }\n        return items;\n    }\n}\nexport default List;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchList } from './actions';\nimport List from './components/List';\nimport './App.css';\n\nconst MAX_NUM = 7;\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.changeNums = this.changeNums.bind(this);\n  }\n  render() {\n    let info = this.props.pictureList;\n    if (info && info.books) {\n      info = {...info, books: info.books.slice(0, this.state.num)};\n    }\n    return (\n      <div className=\"App\">\n        <div className=\"demo-setting\">\n          <label>输入展示书本的个数,最多{MAX_NUM}个</label><input onInput={e => this.changeNums(e)}></input>\n        </div>\n        <List info={info}></List>\n      </div>\n    );\n  }\n  componentDidMount() {\n    this.setState({\n      num: MAX_NUM\n    });\n    //  获取数据\n    this.props.dispatch(fetchList('picture'));\n  }\n  changeNums(e) {\n    let n = e.target.value || MAX_NUM;\n    n = n < 1 ? 1 : n > MAX_NUM ? MAX_NUM : n;\n    this.setState({\n      ...this.state,\n      num: n\n    });\n  }\n}\nconst mapStateToProps = state => {\n  let {picture: pictureList} = state.fetchListReducer\n  return {\n    pictureList: pictureList\n  }\n}\nexport default connect(\n  mapStateToProps,\n)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport reducer from './reducers';\nimport './index.css';\nimport App from './App';\n\nconst middleware = [ thunk ];\nconst store = createStore(\n  reducer,\n  applyMiddleware(...middleware)\n);\nReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>\n  ,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}